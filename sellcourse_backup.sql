-- Xóa toàn bộ schema nếu cần
-- DROP USER course CASCADE;

BEGIN
   FOR rec IN (SELECT 1 FROM dba_users WHERE username = 'course') LOOP
      EXECUTE IMMEDIATE 'DROP USER course CASCADE';
   END LOOP;
END;


-- Tạo người dùng (schema) mới
CREATE USER course IDENTIFIED BY 123;
GRANT CONNECT, RESOURCE TO course;


-- chuyển đến schema mới tạo
ALTER SESSION SET current_schema = course;


-- Thêm các quyền cần thiết cho người dùng
GRANT UNLIMITED TABLESPACE TO course;            -- Cấp quyền cho course để sử dụng không giới hạn dung lượng trên tất cả các tablespace.
ALTER USER course QUOTA UNLIMITED ON USERS;      -- Thiết lập hạn mức sử dụng không giới hạn trên tablespace USERS cho người dùng course.


CREATE TABLE tb_role (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL
);

CREATE TABLE tb_person (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(255) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    firstName VARCHAR2(255),
    lastName VARCHAR2(255),
    is_Delete INT DEFAULT 0,
    role_id INT,

    FOREIGN KEY (role_id) REFERENCES tb_role(id)
);

CREATE TABLE tb_category (
     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    is_Delete INT DEFAULT 0
);

CREATE TABLE tb_course (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(255) NOT NULL,
    price FLOAT,
    lecturer VARCHAR2(255),
    create_Date DATE,
    image VARCHAR2(255),
    description VARCHAR2(255),
    is_TopCourse  INT DEFAULT 0,
    is_Delete INT DEFAULT 0,
    cate_id INT,

    FOREIGN KEY (cate_id) REFERENCES tb_category(id)
);

CREATE TABLE tb_video (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    video_url VARCHAR2(255) NOT NULL,
    is_TopModel INT DEFAULT 0,
    is_Delete INT DEFAULT 0,
    course_id INT,

    FOREIGN KEY (course_id) REFERENCES tb_course(id)
);

CREATE TABLE tb_person_course (
    student_id INT,
    course_id INT,
    dateBuy DATE,
    PRIMARY KEY (student_id, course_id),

    CONSTRAINT fk_person FOREIGN KEY (student_id) REFERENCES tb_person(id),
    CONSTRAINT fk_course_pc FOREIGN KEY (course_id) REFERENCES tb_course(id)
);

CREATE TABLE tb_comment (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR2(255),
    rate INT,
    date_comment DATE,
    is_Delete INT DEFAULT 0,
    person_id INT,
    course_id INT,

    CONSTRAINT fk_person_comment FOREIGN KEY (person_id) REFERENCES tb_person(id),
    CONSTRAINT fk_course_comment FOREIGN KEY (course_id) REFERENCES tb_course(id)
);